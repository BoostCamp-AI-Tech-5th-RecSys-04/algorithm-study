'''
    Chapter 7.이진탐색 : 떡볶이 떡 만들기

    접근법: 최적해를 도출해야 하는 이진탐색.
        1. "최대한 덜 잘랐을 때"를 정답으로 하는 최적화문제의 문제 풀이 방법으로는 완전탐색 밖에 떠올리지 못했음.
        2. 완전탐색(O(N))보다 이진탐색(O(logN))이 효율적이므로, 이진탐색을 선택하게 됨.
'''

#이진탐색은 탐색 시간을 줄이는데 의의를 둔다.

n,m = map(int, input().split()) #입력할 떡 개수, 요청한 떡 길이
array = list(map(int, input().split())) #각 떡의 길이

#최대높이를 고정하는 것 / 최대 떡 길이에 따라 하는 것 중 어떤게 더 효율적일지는 테스트해봐야 할 것 같습니다.

h = 10000000000 #입력받을 수 있는 최대 높이
l = 0 #입력받을 수 있는 최소 높이

while l<=h:
  
  mid = (l+h)//2
  take = sum(map(lambda x: max(x-mid,0),array)) #가져가는 떡의 길이

  if take == m: # 가져가는 떡 길이와 요청한 떡 길이가 동일할 때
    result = mid
    break #탐색 시간을 줄이기 위해 바로 종료

  elif take>m: #요청보다 많이 가져가는 경우
    result = mid #미리 저장해 둠
    l = mid+1

  else: #요청보다 적게 가져가는 경우
    h = mid-1

print(mid)